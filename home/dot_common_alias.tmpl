alias g=git

alias ccp="pwd | xclip -selection clipboard"

{{- if lookPath "bat" }}
alias cat=bat
{{- else if lookPath "batcat" }}
alias bat=batcat
alias cat=batcat
{{- end }}
{{- if lookPath "fdfind" }}
alias fd=fdfind
{{- end }}

{{ $ls_command := "ls" -}}
{{- if lookPath "exa" }}
{{ $ls_command := "exa" -}}
alias ls="{{ $ls_command }}"
# sort by date modified
alias lsdate="{{ $ls_command }} -lah --sort newest"
{{- end }}

alias -- -='cd -'
alias le="less"

## everything without the dot files
alias ll="{{ $ls_command }} -la -I '.*'"
## everything with dot files
alias lla="{{ $ls_command }} -la"
# show me everything human readable
alias lsa="{{ $ls_command }} -lah"
# sorted by size
alias lss="{{ $ls_command }} -lahSr"
# don't list directories
alias lsnd="{{ $ls_command }} -lahd"
# list all dot files
alias lsdot="{{ $ls_command }} -lahd .*"

# Various Quick Shortcuts
alias nbclean="jupyter nbconvert --ClearOutputPreprocessor.enabled=True --inplace **/*.ipynb"

# Docker Stuff
alias d=docker
# alias dsysprune='docker system prune -a --force' # careful this will delete a lot

alias dpsa='docker ps -a'

alias dstopall='docker stop $(docker ps -q)'
alias drmall='docker rm $(docker ps -a -q)'
alias dconprune='docker container prune --force'

alias dcf="docker compose logs -f"
alias dc="docker compose"

# Scrapy aliases
alias sc='scrapy check'
alias st='scrapy-test'

# Various Python Stuff
alias py=python
alias p=poetry

# Docker Services - various commands to run services without installing them on localhost

# May requiire a once off
# mkdir -p $HOME/.docker_servers_data/

alias d_pg='docker run --rm --name postgres --hostname postgres -p 5432:5432 \
  -e POSTGRES_PASSWORD=postgres \
  -v $HOME/.docker_servers_data/postgres:/var/lib/postgresql/data \
  -d postgres'

# Postgress with pgvector on port 5433
alias d_pgvec='docker run --rm --name postgres --hostname postgres -p 5433:5432 \
  -e POSTGRES_PASSWORD=postgres \
  -v $HOME/.docker_servers_data/postgres_pgvec:/var/lib/postgresql/data \
  -d ankane/pgvector'

alias d_pg_stop='docker stop $(docker ps -q --filter ancestor=postgres )'

alias d_pgadmin='docker run --rm --name pgadmin --hostname pgadmin -p 5050:80 \
  --add-host=host.docker.internal:host-gateway \
  -e "PGADMIN_DEFAULT_EMAIL=a@a.com" -e "PGADMIN_DEFAULT_PASSWORD=a" \
  -v $HOME/.docker_servers_data/pgadmin:/var/lib/pgadmin \
  -d dpage/pgadmin4 \
  && sleep 9 && \
  x-www-browser http://localhost:5050'
alias d_pgadmin_stop='docker stop $(docker ps -q --filter ancestor=dpage/pgadmin4 )'

#  If mongodb does not start make sure the permissions on $HOME/.docker_servers_data/mongo are 777
alias d_mongo='docker run --rm --name mongo --hostname mongo -p 27017:27017 \
  -v $HOME/.docker_servers_data/mongo:/data/db \
  -d mongodb/mongodb-community-server'

alias d_mongo_stop='docker stop $(docker ps -q --filter ancestor=mongodb/mongodb-community-server )'

# Container for MongoDB Shell Access
alias moishell='docker run -it --rm --name mongo_shell --entrypoint /bin/bash mongodb/mongodb-community-server'
